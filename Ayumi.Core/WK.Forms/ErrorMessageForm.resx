<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>